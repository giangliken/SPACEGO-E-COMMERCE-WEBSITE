@model SPACEGO_E_COMMERCE_WEBSITE.Models.ProductVariant

@{
    ViewData["Title"] = "Thêm biến thể";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container mt-4">
    <h2 class="mb-4 text-center text-primary">
        <i class="fas fa-layer-group"></i> Thêm biến thể cho sản phẩm
    </h2>

    <div class="row mb-4">
        <div class="col-md-6">
            <div class="bg-light border rounded p-3">
                <strong>Mã sản phẩm:</strong>
                <span class="badge bg-secondary">@Model.ProductId</span>
            </div>
        </div>
        <div class="col-md-6">
            <div class="bg-light border rounded p-3">
                <strong>Tên sản phẩm:</strong>
                <span class="text-primary fw-semibold">@ViewBag.ProductName</span>
            </div>
        </div>
    </div>

    <div class="card shadow rounded-4">
        <div class="card-body p-4">
            @if (ViewBag.Variants != null && ((IEnumerable<SPACEGO_E_COMMERCE_WEBSITE.Models.ProductVariant>)ViewBag.Variants).Any())
            {
                <h5 class="mb-3 text-dark fw-bold">Danh sách biến thể đã có</h5>
                <table class="table table-bordered align-middle">
                    <thead class="table-light text-center">
                        <tr>
                            <th>#</th>
                            <th>Màu sắc</th>
                            <th>Dung lượng</th>
                            <th>Giá bán (VNĐ)</th>
                            <th>Số lượng</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int stt = 1;
                            foreach (var v in (IEnumerable<SPACEGO_E_COMMERCE_WEBSITE.Models.ProductVariant>)ViewBag.Variants)
                            {
                                <tr class="text-center">
                                    <td>@stt</td>
                                    <td>@v.Color?.ColorName</td>
                                    <td>@v.Capacity?.CapacityName</td>
                                    <td>@v.Price.ToString("N0")</td>
                                    <td>@v.Quantity</td>
                                </tr>
                                stt++;
                            }
                        }
                    </tbody>
                </table>
            }

            <hr class="my-4" />
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger">@TempData["Error"]</div>
            }
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success">@TempData["Success"]</div>
            }

            <form asp-action="AddVariantConfirmed" method="post">
                <input type="hidden" asp-for="ProductId" />

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label asp-for="ColorId" class="form-label fw-semibold">Chọn màu sắc</label>
                        <select asp-for="ColorId" asp-items="ViewBag.Colors" class="form-select">
                            <option value="">-- Chọn màu sắc --</option>
                        </select>
                        <span asp-validation-for="ColorId" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="CapacityId" class="form-label fw-semibold">Chọn dung lượng</label>
                        <select asp-for="CapacityId" asp-items="ViewBag.Capacities" class="form-select">
                            <option value="">-- Chọn dung lượng --</option>
                        </select>
                        <span asp-validation-for="CapacityId" class="text-danger"></span>
                    </div>
                </div>

                <div class="row mb-4">
                    <div class="col-md-6 mb-3">
                        <label for="Price" class="form-label fw-semibold">Giá bán (VNĐ)</label>
                        <input name="Price"
                               id="Price"
                               class="form-control price-format"
                               placeholder="VD: 1.500.000"
                               value="@(Model.Price == 0 ? "" : Model.Price.ToString("N0"))" />
                        <span asp-validation-for="Price" class="text-danger"></span>
                    </div>


                    <div class="col-md-6">
                        <label asp-for="Quantity" class="form-label fw-semibold">Số lượng</label>
                        <input name="Quantity"
                               id="Quantity"
                               class="form-control"
                               placeholder="Nhập số lượng tồn kho"
                               value="@(Model.Quantity == 0 ? "" : Model.Quantity.ToString())" />

                        <span asp-validation-for="Quantity" class="text-danger"></span>
                    </div>
                </div>

                <div class="d-flex justify-content-between">
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left"></i> Quay lại danh sách
                    </a>
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-plus-circle"></i> Thêm biến thể
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        // Format number with dot
        function formatNumber(number) {
            return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
        }

        function unformatNumber(formatted) {
            return formatted.replace(/\./g, '');
        }

        document.querySelectorAll('.price-format').forEach(input => {
            input.addEventListener('input', function (e) {
                const caretPosition = this.selectionStart;
                const unformatted = unformatNumber(this.value.replace(/\D/g, ''));
                const formatted = formatNumber(unformatted);
                this.value = formatted;
            });

            // Ensure real value is unformatted on submit
            input.form.addEventListener('submit', function () {
                input.value = unformatNumber(input.value);
            });
        });
    </script>
}
